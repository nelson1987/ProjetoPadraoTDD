@model WebForLink.Web.ViewModels.FichaCadastralTesteVM
@using WebForLink.Web.Resources
@{
    ViewBag.Title = "FichaCadastral";
}
@section Header {
    <style>
        .card {
            box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);
        }

        .card {
            margin-top: 10px;
            box-sizing: border-box;
            border-radius: 2px;
            background-clip: padding-box;
        }

            .card span.card-title {
                color: #fff;
                font-size: 24px;
                font-weight: 300;
                text-transform: uppercase;
            }

            .card .card-image {
                position: relative;
                overflow: hidden;
            }

                .card .card-image img {
                    border-radius: 2px 2px 0 0;
                    background-clip: padding-box;
                    position: relative;
                    z-index: -1;
                }

                .card .card-image span.card-title {
                    position: absolute;
                    bottom: 0;
                    left: 0;
                    padding: 16px;
                }

            .card .card-content {
                padding: 16px;
                border-radius: 0 0 2px 2px;
                background-clip: padding-box;
                box-sizing: border-box;
            }

                .card .card-content p {
                    margin: 0;
                    color: inherit;
                }

                .card .card-content span.card-title {
                    line-height: 48px;
                }

            .card .card-action {
                border-top: 1px solid rgba(160, 160, 160, 0.2);
                padding: 16px;
            }

                .card .card-action a {
                    color: #ffab40;
                    margin-right: 16px;
                    transition: color 0.3s ease;
                    text-transform: uppercase;
                }

                    .card .card-action a:hover {
                        color: #ffd8a6;
                        text-decoration: none;
                    }
    </style>
    <style>
        .notice {
            padding: 10px 10px 10px 10px;
            background-color: #fff;
            border-left: 6px solid #7f7f84;
            margin-bottom: 10px;
            -webkit-box-shadow: 2px 2px 8px rgba(0,0,0,.5);
            -moz-box-shadow: 2px 2px 8px rgba(0,0,0,.5);
            box-shadow: 2px 2px 8px rgba(0,0,0,.5);
        }

        .notice-sm {
            padding: 10px;
            font-size: 80%;
        }

        .notice-lg {
            padding: 35px;
            font-size: large;
        }

        .notice-success {
            border-color: #00a65a;
        }

            .notice-success > strong {
                color: #00a65a;
            }

        .notice-info {
            border-color: #45ABCD;
        }

            .notice-info > strong {
                color: #45ABCD;
            }

        .notice-warning {
            border-color: #FEAF20;
        }

            .notice-warning > strong {
                color: #FEAF20;
            }

        .notice-danger {
            border-color: #d73814;
        }

            .notice-danger > strong {
                color: #d73814;
            }

        .notice .notice-header {
            height: 35px;
        }

            .notice .notice-header notice-header-success > strong {
                color: #00a65a;
            }

            .notice .notice-header .notice-title {
                color: black;
                font-size: 18px;
                line-height: 19.8px;
                margin: 0;
                display: inline;
            }

            .notice .notice-header .notice-subtitle {
                color: black;
                font-size: 18px;
                line-height: 19.8px;
                margin: 0;
                display: inline;
            }

        #map {
            height: 100%;
        }

        .controls {
            background-color: #fff;
            border-radius: 2px;
            border: 1px solid transparent;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
            box-sizing: border-box;
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
            height: 29px;
            margin-left: 17px;
            margin-top: 10px;
            outline: none;
            padding: 0 11px 0 13px;
            text-overflow: ellipsis;
            width: 400px;
        }

            .controls:focus {
                border-color: #4d90fe;
            }
    </style>

}
@Html.BreadCrumb("Meus Documentos", "Minha Ficha Cadastral")

<section class="content">
    @Html.Alerta("FichaAlertaSucessoTop")
    @Html.Alerta("FichaAlertaErroTop")
    @using (Html.BeginForm("Ficha", "Teste", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.DisplayFor(x => x.DadosGerais)
        <div class="box box-default">
            <div class="box-header">
                <h3 class="box-title">
                    <a href="#dadosorgaosPublicosCollapse" data-toggle="collapse">Orgãos Públicos</a>
                </h3>
                <span class="box-subtitle pull-right">
                    Selecionar Todos <i class="fa fa-check-square-o" style="color:#00a65a; font-size:17px;">&nbsp;</i>
                </span>
            </div>
            <div class="box-body collapse" id="dadosorgaosPublicosCollapse">
                <div class="container-fluid">
                    <div class="row">
                        @Html.DisplayFor(x => Model.RoboReceita)
                        @Html.DisplayFor(x => Model.RoboSintegra)
                        @Html.DisplayFor(x => Model.RoboSimplesNacional)
                        @Html.DisplayFor(x => Model.RoboCorreios)
                        @Html.DisplayFor(x => Model.RoboSuframa)
                    </div>
                </div>
            </div>
        </div>
        <div class="box box-default">
            <div class="box-header">
                <h3 class="box-title">
                    <a href="#dadosEnderecosCollapse" data-toggle="collapse">@Language.Dados_Enderecos</a>
                </h3>
                <span class="box-subtitle pull-right">
                    Selecionar Todos <i class="fa fa-check-square-o" style="color:#00a65a; font-size:17px;">&nbsp;</i>
                </span>
            </div>
            <div class="box-body" id="dadosEnderecosCollapse">
                <div class="container-fluid">
                    @{
                        for (int i = 0; i < Model.EnderecoList.Count; i++)
                        {
                            @Html.DisplayFor(x => x.EnderecoList[i])
                        }
                    }
                </div>
            </div>
        </div>
        <div class="box box-default">
            @*style="background-color:#f7aaaa; color:#a94442;">*@
            <div class="box-header">
                <h3 class="box-title"><a href="#dadosBancariosCollapse" data-toggle="collapse">Dados Bancários</a></h3>
                <span class="box-subtitle pull-right">
                    Selecionar Todos <i class="fa fa-check-square-o" style="color:#00a65a; font-size:17px;">&nbsp;</i>
                </span>
            </div>

            <div class="box-body collapse" id="dadosBancariosCollapse">
                <div class="container-fluid">
                    @for (int i = 0; i < Model.BancarioList.Count; i++)
                    {
                        @Html.DisplayFor(x => x.BancarioList[i])
                    }
                </div>
            </div>
        </div>
        <div class="box box-default">
            <div class="box-header">
                <h3 class="box-title"><a href="#dadosContatosCollapse" data-toggle="collapse">Dados Contatos</a></h3>
                <span class="box-subtitle pull-right">
                    Selecionar Todos <i class="fa fa-check-square-o" style="color:#00a65a; font-size:17px;">&nbsp;</i>
                </span>
            </div>

            <div class="box-body collapse" id="dadosContatosCollapse">
                <div class="table-container">
                    <table class="table table-filter">
                        <tbody>
                            @for (int i = 0; i < Model.ContatoList.Count; i++)
                            {
                                @Html.DisplayFor(x => x.ContatoList[i])
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="box box-default">
            <div class="box-header">
                <h3 class="box-title"><a href="#dadosUnspscCollapse" data-toggle="collapse">Servicos / Materiais / Equipamentos oferecidos ao Mercado</a></h3>
                <span class="box-subtitle pull-right">
                    Selecionar Todos <i class="fa fa-check-square-o" style="color:#00a65a; font-size:17px;">&nbsp;</i>
                </span>
            </div>
            <div class="box-body" id="dadosUnspscCollapse">
                <div class="col-lg-6">
                    <div class="notice notice-success">
                        <div class="notice-header notice-header-success">
                            <h3 class="notice-title">Materiais</h3>
                            <span class="notice-subtitle pull-right">
                                <i class="fa fa-check-square-o" style="color:#00a65a;">&nbsp;</i>
                            </span>
                        </div>
                        <div class="notice-body">
                            <table class="table table-condensed">
                                <thead>
                                    <tr>
                                        <th>Descrição</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.MaterialList.Count; i++)
                                    {
                                        @Html.DisplayFor(x => x.MaterialList[i])
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="notice">
                        <div class="notice-header notice-header-success">
                            <h3 class="notice-title">Serviços</h3>
                        </div>
                        <div class="notice-body">
                            <table class="table table-condensed">
                                <thead>
                                    <tr>
                                        <th>Descrição</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.ServicoList.Count; i++)
                                    {
                                        @Html.DisplayFor(x => x.ServicoList[i])
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="clearfix"></div>
            </div>
        </div>
        <div class="box box-default">
            <div class="box-body">
                <div class="text-center text-nowrap">
                    <button type="button" class="btn btn-primary" onclick="$('#alert_confirm').show(); $('#btnSimFicha').focus();">Salvar</button>
                </div>
                <div id="alert_confirm" class="alert alert-warning" role="alert" style="display: none;">
                    <span>Tem certeza que deseja salvar sua ficha cadastral?</span>&nbsp;&nbsp;&nbsp;&nbsp;
                    <button type="button" id="btnSimFicha" class="btn btn-primary btn-xs" onclick="$('form').submit();">Sim</button>&nbsp;&nbsp;&nbsp;
                    <button type="button" id="btnNaoFicha" class="btn btn-default btn-xs" onclick="$('#alert_confirm').fadeOut('fast');">Não</button>
                </div>
            </div>
        </div>
                        }
    @Html.Alerta("FichaAlertaSucessoBottom")
</section>
@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA78cySsPqqw2m5Nl8sZroXSlxvot93LTs&libraries=places&callback=initMap"
            async defer></script>
    <script type="text/javascript">

        $.validator.defaults.ignore = "input[type=hidden]";
        function initMap() {
            for (var i = 0; i < $('.LatitudeTxt').length; i++) {
                var posicao = {
                    lat: parseInt($($('.LatitudeTxt')[i]).text().trim()),
                    lng: parseInt($($('.LongitudeTxt')[i]).text().trim())
                };
                var localMapa = $($('.LatitudeTxt')[i]).parents("div.row").find("#mapa")[0];
                var map = new google.maps.Map(localMapa, {
                    zoom: 4,
                    panControl: false,
                    center: posicao,
                    disableDefaultUI: true,
                    position: posicao
                });
                var marker = new google.maps.Marker({
                    map: map,
                    position: posicao
                });
            }
        }
        google.maps.event.addDomListener(window, 'resize', function () {
        });

        google.maps.event.addDomListener(window, 'load', initMap);

    </script>
    <!--
    <script>
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: -33.8688, lng: 151.2195 },
                zoom: 13
            });

            var input = document.getElementById('pac-input');

            var autocomplete = new google.maps.places.Autocomplete(input);
            autocomplete.bindTo('bounds', map);

            map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

            var infowindow = new google.maps.InfoWindow();
            var marker = new google.maps.Marker({
                map: map
            });
            marker.addListener('click', function () {
                infowindow.open(map, marker);
            });

            autocomplete.addListener('place_changed', function () {
                infowindow.close();
                var place = autocomplete.getPlace();
                if (!place.geometry) {
                    return;
                }

                if (place.geometry.viewport) {
                    map.fitBounds(place.geometry.viewport);
                } else {
                    map.setCenter(place.geometry.location);
                    map.setZoom(17);
                }

                // Set the position of the marker using the place ID and location.
                marker.setPlace({
                    placeId: place.place_id,
                    location: place.geometry.location
                });
                marker.setVisible(true);

                infowindow.setContent('<div><strong>' + place.name + '</strong><br>' +
                    'Place ID: ' + place.place_id + '<br>' +
                    place.formatted_address);
                infowindow.open(map, marker);
            });
        }
    </script>
        -->
}