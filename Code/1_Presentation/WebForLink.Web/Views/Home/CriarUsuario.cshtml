@model WebForLink.Web.ViewModels.UsuarioVM
@{
    Layout = null;
}

<!DOCTYPE html>
<html style="height: 100%;">
<head>
    <meta charset="UTF-8">
    <title>@HttpContext.Current.Application["NomeSistema"].ToString()</title>
    <meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no' name='viewport'>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/AdminLTE.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div class="form-box" id="login-box">
        <div class="header">Cadastrar Novo Usuário</div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="body bg-gray">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Nome, new { @class = "control-label" })
                    @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, new { @class = "control-label" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CPF, new { @class = "control-label" })
                    @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Login, new { @class = "control-label" })
                    @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Senha, new { @class = "control-label" })
                    @Html.PasswordFor(model => model.Senha, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmaSenha, new { @class = "control-label" })
                    @Html.PasswordFor(model => model.ConfirmaSenha, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ConfirmaSenha, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="body bg-gray">
                <div class="form-group">
                    @Html.LabelFor(model => model.ListaContratantes, new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.IdContratante, Model.ListaContratantes)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ListaPapeis, new { @class = "control-label" }) @*new { htmlAttributes = new { @class = "form-control" } }*@
                    @*ListaContratantes
                    ListaPerfis
                    ListaPapeis*@
                    @*@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.IdPapel, Model.ListaPapeis)
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ListaPerfis, new { @class = "control-label" })
                    @*@Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.IdPerfil, Model.ListaPerfis)
                </div>
            </div>
            <button type="submit" class="btn btn-primary btn-block">Enviar</button>
        }
    </div>
    <script src="~/Scripts/jquery-2.1.3.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js" type="text/javascript"></script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="js/html5shiv.js"></script>
        <script src="js/respond.min.js.js"></script>
    <![endif]-->
    <!--[if lt IE 8]>
        <script>
            location.href = 'Compatibilidade.html'
        </script>
    <![endif]-->
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
</body>

</html>
