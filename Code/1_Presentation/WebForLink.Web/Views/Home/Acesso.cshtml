@model WebForLink.Web.ViewModels.AcessoVM

@{
    Layout = null;
}

<!DOCTYPE html>
<html style="height: 100%;">
<head>
    <meta charset="UTF-8">
    <title>WebForLink</title>
    <meta content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no' name='viewport'>
        @Styles.Render("~/style/bootstrap")
        @Styles.Render("~/style/azul")
</head>
<body class="">
    <div class="form-box" id="login-box">
        <div class="header">Acessar</div>
        <div class="text-center bg-gray" style="padding-top: 15px;">
            <img src="~/Content/images/webforlink3_200x45_ed.png" />
        </div>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ReturnUrl)
            @Html.HiddenFor(model => model.SolicitacaoId)
            @Html.HiddenFor(model => model.TravaLogin)
            @Html.HiddenFor(model => model.TipoCadastroNovoUsuario)
            @Html.HiddenFor(model => model.ContratanteId)
            <div class="body bg-gray">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Login, new { @class = "control-label" })
                    @if (Model.TravaLogin == 0)
                    {
                        @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                    }
                    else
                    {
                        @Html.HiddenFor(model => model.Login)
                        @Html.DisplayFor(model => model.Login)
                    }
                    @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Senha, new { @class = "control-label" })
                    @Html.PasswordFor(model => model.Senha, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="footer">
                <button type="submit" class="btn btn-primary btn-block">Entrar</button>
                <div style="float: left;">
                    <a href="@Url.Action("EsqueceuSenha", "Home")" class="btn-link">Esqueci minha Senha</a>
                </div>
                <div style="float: right;">
                    <a href="@Url.Action("Index", "Home")" class="btn-link">Sair</a>
                </div>
                <div class="clearfix"></div>
            </div>
        }
    </div>
    @Scripts.Render("~/bundles/jquery")
    @*<script src="~/Scripts/jquery-2.1.3.min.js" type="text/javascript"></script>*@
    <script src="~/Scripts/bootstrap.min.js" type="text/javascript"></script>
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="js/html5shiv.js"></script>
        <script src="js/respond.min.js.js"></script>
    <![endif]-->
    <!--[if lt IE 8]>
        <script>
            location.href = 'Compatibilidade.html'
        </script>
    <![endif]-->
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
</body>
</html>